{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"explorer-reference/","text":"Rome Explorer Provide several explorer utilities for navigating capabilities loaded into Rome Bridge Example: >>> from rome_bridge import explorer >>> explore = explorer.RomeExplorer() >>> explore.print_feature_store_description(\"RomeFeast\") RomeFeast RomeExplorer Rome Explorer Class for finding and explaining Rome Feature Stores. ... Attributes str list of installed feature_stores Methods describe_feature_store(feature_store_name=\"feature_store\"): prints information about the feature_stores Source code in rome_bridge/explorer.py 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 class RomeExplorer : \"\"\" Rome Explorer Class for finding and explaining Rome Feature Stores. ... Attributes ---------- feature_stores : str list of installed feature_stores Methods ------- describe_feature_store(feature_store_name=\"feature_store\"): prints information about the feature_stores \"\"\" def __init__ ( self , additional_feature_stores : list [ RomeBaseFeatureStore ] = [] ) -> None : \"\"\"__init__ for RomeExplorer Args: additional_feature_stores (list[RomeBaseFeatureStore], optional): additonal loaded feature stores. Defaults to []. \"\"\" self . modules = [ RomeFeast , ] self . modules += additional_feature_stores def print_feature_store_description ( self , feature_store_name : str ) -> None : \"\"\"Prints out a description of the Feature Store installed in Rome Args: feature_store_name (str): The Name of the Feature Store Class as a String Returns: None \"\"\" out_str = feature_store_name print ( out_str ) __init__ ( additional_feature_stores = []) init for RomeExplorer Parameters: Name Type Description Default additional_feature_stores list [ RomeBaseFeatureStore ] additonal loaded feature stores. Defaults to []. [] Source code in rome_bridge/explorer.py 37 38 39 40 41 42 43 44 def __init__ ( self , additional_feature_stores : list [ RomeBaseFeatureStore ] = [] ) -> None : \"\"\"__init__ for RomeExplorer Args: additional_feature_stores (list[RomeBaseFeatureStore], optional): additonal loaded feature stores. Defaults to []. \"\"\" self . modules = [ RomeFeast , ] self . modules += additional_feature_stores print_feature_store_description ( feature_store_name ) Prints out a description of the Feature Store installed in Rome Parameters: Name Type Description Default feature_store_name str The Name of the Feature Store Class as a String required Returns: Type Description None None Source code in rome_bridge/explorer.py 46 47 48 49 50 51 52 53 54 55 56 def print_feature_store_description ( self , feature_store_name : str ) -> None : \"\"\"Prints out a description of the Feature Store installed in Rome Args: feature_store_name (str): The Name of the Feature Store Class as a String Returns: None \"\"\" out_str = feature_store_name print ( out_str )","title":"Rome Explorer"},{"location":"explorer-reference/#rome-explorer","text":"Provide several explorer utilities for navigating capabilities loaded into Rome Bridge Example: >>> from rome_bridge import explorer >>> explore = explorer.RomeExplorer() >>> explore.print_feature_store_description(\"RomeFeast\") RomeFeast","title":"Rome Explorer"},{"location":"explorer-reference/#rome_bridge.explorer.RomeExplorer","text":"Rome Explorer Class for finding and explaining Rome Feature Stores. ...","title":"RomeExplorer"},{"location":"explorer-reference/#rome_bridge.explorer.RomeExplorer--attributes","text":"str list of installed feature_stores","title":"Attributes"},{"location":"explorer-reference/#rome_bridge.explorer.RomeExplorer--methods","text":"describe_feature_store(feature_store_name=\"feature_store\"): prints information about the feature_stores Source code in rome_bridge/explorer.py 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 class RomeExplorer : \"\"\" Rome Explorer Class for finding and explaining Rome Feature Stores. ... Attributes ---------- feature_stores : str list of installed feature_stores Methods ------- describe_feature_store(feature_store_name=\"feature_store\"): prints information about the feature_stores \"\"\" def __init__ ( self , additional_feature_stores : list [ RomeBaseFeatureStore ] = [] ) -> None : \"\"\"__init__ for RomeExplorer Args: additional_feature_stores (list[RomeBaseFeatureStore], optional): additonal loaded feature stores. Defaults to []. \"\"\" self . modules = [ RomeFeast , ] self . modules += additional_feature_stores def print_feature_store_description ( self , feature_store_name : str ) -> None : \"\"\"Prints out a description of the Feature Store installed in Rome Args: feature_store_name (str): The Name of the Feature Store Class as a String Returns: None \"\"\" out_str = feature_store_name print ( out_str )","title":"Methods"},{"location":"explorer-reference/#rome_bridge.explorer.RomeExplorer.__init__","text":"init for RomeExplorer Parameters: Name Type Description Default additional_feature_stores list [ RomeBaseFeatureStore ] additonal loaded feature stores. Defaults to []. [] Source code in rome_bridge/explorer.py 37 38 39 40 41 42 43 44 def __init__ ( self , additional_feature_stores : list [ RomeBaseFeatureStore ] = [] ) -> None : \"\"\"__init__ for RomeExplorer Args: additional_feature_stores (list[RomeBaseFeatureStore], optional): additonal loaded feature stores. Defaults to []. \"\"\" self . modules = [ RomeFeast , ] self . modules += additional_feature_stores","title":"__init__()"},{"location":"explorer-reference/#rome_bridge.explorer.RomeExplorer.print_feature_store_description","text":"Prints out a description of the Feature Store installed in Rome Parameters: Name Type Description Default feature_store_name str The Name of the Feature Store Class as a String required Returns: Type Description None None Source code in rome_bridge/explorer.py 46 47 48 49 50 51 52 53 54 55 56 def print_feature_store_description ( self , feature_store_name : str ) -> None : \"\"\"Prints out a description of the Feature Store installed in Rome Args: feature_store_name (str): The Name of the Feature Store Class as a String Returns: None \"\"\" out_str = feature_store_name print ( out_str )","title":"print_feature_store_description()"}]}